<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>iLegal Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
        crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.1.0/remixicon.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.1.0/remixicon.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&family=Roboto+Slab&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="community2.css">



</head>

<body>
    <%- include('partials/community-header') %>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
        <div class="body">
            <div class="main-body">
                <div class="sub-body">

                    <div class="post-section-0">

                        <div class="post-section">
                            <div class="write-post-container">
                                <div class="write-post">
                                    <div class="profile-container">
                                        <div class="profile-image">
                                            <img src="<%=user.image%>" alt="">
                                        </div>
                                    </div>
                                    <div class="post-text">
                                        <span>Share a Post...</span>
                                    </div>
                                </div>
                                <div class="post-media">


                                    <div class="post-image">
                                        <i class="fa-solid fa-image"></i><span>Image</span>
                                    </div>

                                </div>

                            </div>

                            <div id="posts-container" class="user-post-container">
                                <% posts.forEach(post=> { %>
                                   
                                <div id="post-container"  class="user-post"  data-post-id="<%= post.post_id %>">
                                    <div class="user-info">
                                        <div class="profile-name">
                                            <div class="profile-container">

                                                <div class="profile-image">
                                                    <img src="<%=post.lawyer_profile_image%>" alt="">
                                                </div>
                                            </div>
                                            <div class="user-name-day">
                                             <a href="/community/user-profile?id=<%=post.lawyer_id%>"><div class="user-name" ><%=post.lawyer_name%></div></a>   
                                                <div class="post-day"><%=formatDate(post.created_at)%></div>
                                            
                                            </div>
                                        </div>
                                        <div class="follow-container">
                                            <input type="hidden" name="postLawyerId"
                                                            value="<%=post.lawyer_id%>">
                                            <input type="hidden" name="postIdForFollower" value="<%=post.post_id%>>">
                                            <% if(userId!==post.lawyer_id){ %>

                                                <div class="follow-btn" id="follow-btn-post" data-post-id="<%= post.post_id %>"><% if(post.user_follows_post_owner){ %>
                                                    Following
                                              <%  }  else { %>
                                                    Follow
                                            <%  } %>
                                            </div>
                                          <%  } %>
                                            
                                            <div class="follow-icon"><i class="fa-solid fa-user-plus"></i></div>
                                        </div>
                                    </div>
                                    <div class="post-info">
                                        <div id="posts-para" class="post-para" data-post-id="<%= post.post_id %>">
                                            <%=post.content%>
                                        </div>
                                        <%if(post.image_path){ %>
                                            <div class="user-post-image">
                                                <div class="post-img-box">
                                                    <img src="<%=post.image_path%>" alt="">
                                                </div>
                                            </div>
                                            <% } %>
                                    </div>
                                    <div class="post-stat" data-post-id="<%= post.post_id %>">
                                        <div class="like-comment">
                                            <div class="likes-number">

                                            
                                            </div>
                                            <div class="comment-number">
                                              
                                                   <a href="/community/post/<%=post.post_id%>"><span><%=comments.filter(c => c.post_id === post.post_id).length %> comments</span></a> 
                                    
                                              
                                            </div>
                                        </div>
                                        <hr>
                                        <div class="like-share-comment">
                                            <div class="">
                                                <i class="like-btn fa-solid fa-thumbs-up like-bigger like-button <%= post.user_liked ? 'like-active' : '' %>" 
                                                   data-user-id="<%= userId %>" 
                                                   data-post-id="<%= post.post_id %>"></i>
                                                <span id="likes-<%= post.post_id %>">
                                                    <%= post.like_count %> Likes
                                                </span>
                                            </div>
                                            
                                            <div class="comment" data-post-id="<%= post.post_id %>">
                                                <i class="fa-solid fa-comment"></i>
                                                <span>Comment</span>
                                            </div>
                                            <div class="share">
                                                <i class="fa-solid fa-paper-plane"></i>
                                                <span>Share</span>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="post-comments">
                                        <div class="post-comments-container">
                                            <div class="add-reveiew">
                                                <div class="add-reveiew-container">
                                                    <form id="add-review" action="/community/review" method="post">
                                                        <input type="hidden" name="postId"
                                                            value="<%=post.post_id%>">
                                                        <div class="text-box">
                                                            <textarea name="comment" id="new-reveiew" cols="40"
                                                                rows="5" placeholder="add a comment"></textarea>
                                                            <div class="new-ok-cnc-btn">
                                                                <button type="submit"
                                                                    class="new-ok-btn">Submit</button>

                                                            </div>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                       
                                    
                                                   
                                        </div>
                                    </div>
                                </div>
                              
                                    <% }) %>
                            </div>
                            


                            <div class="write-post-form-container-0">
                                <div class="write-post-form-container">
                                    <div class="cancel-form"><i class="fa-solid fa-xmark" id="cancel-form"></i></div>
                                    <div class="wrapper">
                                        <div class="wrapper-profile">
                                            <div class="w-profile-container">
                                                <div class="w-profile-image">
                                                    <img src="<%=user.image%>" alt="">
                                                </div>
                                            </div>
                                            <div class="w-user-name-day">
                                                <div class="w-user-name"><%=currentUser.name%></div>

                                            </div>
                                        </div>
                                         <form action="/community" enctype="multipart/form-data" method="post"
                                            class="write-post-form">

                                            <div class="post-media">

                                                <input type="file" name="image" id="image-upload">
                                                <label for="image-upload" class="post-image">
                                                    <i class="fa-solid fa-image"></i><span>Image</span>
                                                </label>
                                                <div id="previewContainer">
                                                    <img id="imagePreview"
                                                        style="display: none; max-width: 650px; max-height: 400px;"
                                                        margin-top="1rem" alt="Image Preview" />
                                                    <div class="cancel-image" style="display:none;"><i
                                                            class="fa-solid fa-circle-xmark" id="cancel-image"></i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="input-field if-field bio">
                                                <textarea name="content" id="address" cols="30" rows="10"
                                                    placeholder="Write about Your Post" required></textarea>
                                            </div>
                                            <div class="submit-btn-container">
                                                <input type="submit" class="submit-btn" value="Post">
                                            </div>
                                    </form> 
                                        <!-- <form id="communityForm" action="/community" enctype="multipart/form-data" method="post"
                                            class="write-post-form">

                                            <div class="post-media">

                                                <input type="file" name="image" id="image-upload">
                                                <label for="image-upload" class="post-image">
                                                    <i class="fa-solid fa-image"></i><span>Image</span>
                                                </label>
                                                <div id="previewContainer">
                                                    <img id="imagePreview"
                                                        style="display: none; max-width: 650px; max-height: 400px;"
                                                        margin-top="1rem" alt="Image Preview" />
                                                    <div class="cancel-image" style="display:none;"><i
                                                            class="fa-solid fa-circle-xmark" id="cancel-image"></i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="input-field if-field bio">
                                                <textarea name="content" id="address" cols="30" rows="10"
                                                    placeholder="Write about Your Post" required></textarea>
                                            </div>
                                            <div class="submit-btn-container">
                                                <input id="submitButton" type="submit" class="submit-btn" value="Post">
                                            </div>
                                        </form> -->
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="community-section-3">
                        <div class="suggestion-container">
                            <div class="s-heading">
                                <Span>Suggestions for you</Span>
                            </div>
                            <div class="s-content">
                              <% mutuals.forEach(mutual=>{  %>
                              
                                <div class="suggestion-account">
                                    
                                        <div class="profile-name">
                                            <div class="profile-container">
                                                <div class="profile-image">
                                                    <img src="<%=mutual.lawyer_profile_image%>" alt="">
                                                </div>
                                            </div>
                                            <div class="user-name-day">
                                                <input type="hidden" name="suggestedLawyerId"
                                                                value="<%=mutual.lawyer_id%>">
                                              
                                               <a href="/community/user-profile?id=<%=mutual.lawyer_id%>"> <div class="user-name"> <%=mutual.lawyer_name%> </div> </a>
                                              
                                                <div class="followed-by">Followed by <%=mutual.mutual_follower_names%></div>
                                                
                                            </div>
                                        </div>
                                    
                                    
                                    <div class="follow-container">
                                        <div class="follow-btn" id="follow-suggestion">Follow</div>
                                    </div>
                                </div>
                                <%  }) %>
                             

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="loading-spinner">
                <div class="loader"></div>
            </div>

        </div>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
        <script>

//SEARCH BAR FUNCTIONS ---------------------------------------------
const searchLogo=document.querySelector(".search-logo")
const navBar=document.querySelector(".nav-menu")
const searchBar=document.querySelector(" .search-box-container")
const cancelSearch=document.querySelector(".cancel-search")

searchLogo.onclick=()=>{
navBar.classList.add("unactive");
searchLogo.classList.add("unactive-search");
searchBar.classList.add("search-box-active");
cancelSearch.classList.add("cancel-search-active");
}

cancelSearch.onclick=()=>{
   
    setTimeout(() => {
        searchBar.classList.remove("search-box-active");
        cancelSearch.classList.remove("cancel-search-active");
        navBar.classList.remove("unactive");
        searchLogo.classList.remove("unactive-search");
    }, 100); 
}

const searchResult = document.querySelector(".search-result-container");
const searchInput = document.querySelector("#search");
const searchButton = document.querySelector(".ipc-submit");

 searchInput.onkeyup = () => {
  
   if (searchInput.value.trim() === "") {
     searchResult.classList.remove("search-result-active");
   } else {
    searchResult.classList.add("search-result-active");
   }
 };

/*
searchButton.onclick=()=>{
    if (searchInput.value.trim() === "") {
    searchResult.classList.remove("search-result-active");
  } else {
    searchResult.classList.add("search-result-active");
  }
} */



searchButton.addEventListener("click", (e) => {
  e.preventDefault(); 
  
});


searchInput.addEventListener("input", () => {
  
  if (searchInput.value.trim() === "") {
    searchResult.classList.remove("search-result-active");
  }
});

document.getElementById('search').addEventListener('input', async function () {
    const query = this.value;

    if (query.trim() === '') {
        document.querySelector('.search-results').innerHTML = ''; // Clear results
        return;
    }

    try {
        const response = await fetch(`/community/search?search=${encodeURIComponent(query)}`);
        const results = await response.json();
        console.log(results);
        const resultsContainer = document.querySelector('.search-results');
        resultsContainer.innerHTML = ''; // Clear previous results
       
        results.forEach(result => {
            console.log(result);
            const resultHTML = `
                <div class="search-result-account">
                    <div class="search-profile-image-container">
                        <div class="search-profile-image">
                            <img src="${result.image || '../uploads/avatar.png'}" alt="${result.name}">
                        </div>
                    </div>
                    <div class="search-profile-name">
                       <a href="/community/user-profile?id=${result.id}"> <div class="search-user-name">${result.name}</div></a>
                       
                        
                    </div>
                </div>
            `;
            resultsContainer.insertAdjacentHTML('beforeend', resultHTML);
        });
    } catch (err) {
        console.error('Error fetching search results:', err);
    }
});
//-----------------------------------------------------------------

            const followUser = document.querySelector("#follow-suggestion")
            
;
  if(followUser){
    followUser.onclick = async () => {
        console.log('Suggestion Follow button clicked')
    try {
        const lawyerId = document.querySelector("input[name='suggestedLawyerId']").value;
       const response = await fetch("/community/follow", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({lawyerId}),
      });
      const result = await response.json();
      
      if(result.success){

        if (result.follow) {
        followUser.innerText = "Following";
      } else {
        followUser.innerText = "Follow";
      }

      }else{
        console.error("Error :", result.message);
      }
     
    } catch (error) {
        console.error("Error : ", error);
    }
  }
  }

 


  const followUserPost = document.querySelector("#follow-btn-post");
            
            
              if(followUserPost){
                followUserPost.onclick = async () => {
                    console.log("button clicked");
                try {
                    const lawyerId = document.querySelector("input[name='postLawyerId']").value;
                    const postId = followUserPost.getAttribute('data-post-id');
                   const response = await fetch("/community/follow", {
                    method: "POST",
                    headers: {
                      "Content-Type": "application/json",
                    },
                    body: JSON.stringify({lawyerId, postId}),
                  });
                  const result = await response.json();
                  
                  if(result.success){
            
                    if (result.follow) {
                    followUserPost.innerText = "Following";
                  } else {
                    followUserPost.innerText = "Follow";
                  }
            
                  }else{
                    console.error("Error :", result.message);
                  }
                 
                } catch (error) {
                    console.error("Error : ", error);
                }
              }
              }

    
       
            //       const like=document.querySelector(".like")
            //like.onclick=()=>{
            //  likeI.classList.toggle("like-active")
            //}
            document.addEventListener('click', async (event) => {
    if (event.target.matches('.like-button')) {
        console.log('Button clicked:', event.target); // Log the button element
        const button = event.target;
        console.log('Data attributes:', button.dataset); // Log all data attributes
        const postId = button.dataset.postId; // Extract the post ID
        const likesElement = document.getElementById(`likes-${postId}`); // Target the likes count display
        let currentLikes = parseInt(likesElement.innerText.split(' ')[0]); // Extract the current like count

        try {
            // Send the like/unlike request to the server
            const response = await fetch('/community/community-toggle-like', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ postId })
            });

            const data = await response.json();
            if (data.success) {
                console.log(data.liked ? 'Post liked' : 'Post unliked');

                // Toggle the UI like-active class
                button.classList.toggle('like-active', data.liked);

                // Update the like count based on the server response
                if (data.liked) {
                    currentLikes += 1;
                } else {
                    currentLikes -= 1;
                }
                likesElement.innerText = `${currentLikes} Likes`;
            } else {
                console.error('Server error:', data.message);
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }
});





            // document.querySelector("#select-dropdown-2").parentNode.classList.add("disabled");

            const postText = document.querySelector(".post-text");
            const postImage = document.querySelector(".post-image");
            const CancelForm = document.querySelector("#cancel-form")
            const WritePostForm = document.querySelector(".write-post-form-container-0");

            postText.onclick = () => {
                WritePostForm.classList.add("form-active");
            }

            postImage.onclick = () => {
                WritePostForm.classList.add("form-active");
            }

            CancelForm.onclick = () => {
                WritePostForm.classList.remove("form-active");
            }



            const imageUpload = document.getElementById('image-upload');
            const imagePreview = document.getElementById('imagePreview');
            const previewContainer = document.getElementById('previewContainer');
            const cancelImage = document.querySelector('.cancel-image');

            // Event listener for image upload
            imageUpload.addEventListener('change', (event) => {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block';
                        cancelImage.style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                }
            });

            // Event listener for cancel button
            cancelImage.addEventListener('click', () => {
                imagePreview.style.display = 'none';
                cancelImage.style.display = 'none';
                imagePreview.src = '';
                imageUpload.value = ''; // Clear the file input
            });






            const share = document.querySelector(".share")
            const shareContainer = document.querySelector(".post-share")
            share.onclick = () => {
                shareContainer.classList.toggle("post-share-active")
                share.classList.toggle("comment-share-active")
            }

            function formatDate(date) {
    const options = {
        day: '2-digit',
        month: 'long',
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
        hour12: true 
    };
    return date.toLocaleString('en-GB', options).replace(',', ' at');
}



            
document.addEventListener('DOMContentLoaded', () => {
    let offset = 10;
    const limit = 10;
    const container = document.querySelector('.user-post-container');
    let isLoading = false; 
    let isScrollingFinished = false; // Flag to control fetching posts

    // Function to fetch posts from the server
    const fetchPosts = async () => {
        if (isLoading) return; // Prevent duplicate requests while loading
        isLoading = true;

        const spinner = document.getElementById('loading-spinner');
        spinner.style.display = 'block';

        try {
            const response = await fetch(`/community/posts?offset=${offset}&limit=${limit}`);
            if (!response.ok) throw new Error('Failed to fetch posts');
            const data = await response.json();

            // Simulate delay for spinner visibility
            await new Promise((resolve) => setTimeout(resolve, 500));

            // Append posts to the DOM
            console.log(data.posts);
            appendPosts(data.posts, data.comments, data.replies, data.userId);

            // Update the offset for the next fetch
            offset += limit;

            // If no more posts, stop further fetching
            if (data.posts.length < limit) {
                window.removeEventListener('scroll', handleScroll);
            }

        } catch (error) {
            console.error('Error fetching posts:', error);
        } finally {
            // Hide the spinner and set isLoading to false
            const spinner = document.getElementById('loading-spinner');
            spinner.style.display = 'none';
            isLoading = false;

            // Reset the flag to allow for the next scroll event
            isScrollingFinished = true;
        }
    };

    // Function to append posts to the DOM
    const appendPosts = (posts, comments, replies, userId) => {
        posts.forEach((post) => {
            const postHTML = `
                <div class="user-post" data-post-id=${post.post_id}>
                    <div class="user-info">
                        <div class="profile-name">
                            <div class="profile-container">
                                <div class="profile-image">
                                    <img src="${post.lawyer_profile_image}" alt="">
                                </div>
                            </div>
                            <div class="user-name-day">
                                <a href="/community/user-profile?id=${post.lawyer_id}">
                                    <div class="user-name">${post.lawyer_name}</div>
                                </a>
                                <div class="post-day">${formatDate(new Date(post.created_at))}</div>
                            </div>
                        </div>
                        <div class="follow-container">
                            <input type="hidden" name="postLawyerId" value="${post.lawyer_id}">
                            ${userId !== post.lawyer_id ? `<div class="follow-btn-2" id="follow-btn-post" data-post-id="${post.post_id}">Follow</div>` : ''}
                            <div class="follow-icon"><i class="fa-solid fa-user-plus"></i></div>
                        </div>
                    </div>
                    <div class="post-info">
                         
                        <div class="post-para" data-post-id="${post.post_id}">${post.content}</div>
                        ${post.image_path ? `
                        <div class="user-post-image">
                            <div class="post-img-box">
                                <img src="${post.image_path}" alt="">
                            </div>
                        </div>` : ''}
                    </div>
                   
                         <div class="post-stat" data-post-id="${post.post_id}">
                        <div class="like-comment">
                            <div class="likes-number"></div>
                            <div class="comment-number">
                               <a href="/community/post/${post.post_id}"> <span>${comments.filter(c => c.post_id === post.post_id).length} Comments</span> </a> 
                            </div>
                        </div>
                        <hr>
                        <div class="like-share-comment">
                            <div>
                                <i class="fa-solid fa-thumbs-up like-bigger like-button ${post.user_liked ? 'like-active' : ''}" 
                                   data-user-id="${post.userId}" 
                                   data-post-id="${post.post_id}"></i>
                                <span id="likes-${post.post_id}">${post.like_count} Likes</span>
                            </div>
                            <div class="comment" data-post-id="${post.post_id}">
                                <i class="fa-solid fa-comment"></i>
                                <span>Comment</span>
                            </div>
                            <div class="share">
                                <i class="fa-solid fa-paper-plane"></i>
                                <span>Share</span>
                            </div>
                        </div>
                    </div>
                    <div class="post-comments">
                        <div class="post-comments-container">
                            ${comments.filter(c => c.post_id === post.post_id).map(comment => `
                            <div class="reveiew-container">
                                <div class="reveiew-name-rating">
                                    <div class="reveiew-name">${comment.username}</div>
                                    <div class="review-date">${formatDate(new Date(comment.created_at))}</div>
                                </div>
                                <div class="reveiew-para">
                                    <p>${comment.content}</p>
                                </div>
                                <div class="lawyer-reply">
                                    ${replies.filter(r => r.comment_id === comment.id).map(reply => `
                                    <div class="lawyer-previous-reply">
                                        <div class="p-reply-name">${reply.username}</div>
                                        <div class="p-reply-date">${formatDate(new Date(reply.created_at))}</div>
                                        <p>${reply.content}</p>
                                    </div>`).join('')}
                                </div>
                            </div>`).join('')}
                        </div>
                    </div>
                </div>
            `;
            container.insertAdjacentHTML('beforeend', postHTML);
        });

        isScrollingFinished = true;  // Make sure this is reset
        attachFollowListeners(); // Reattach event listeners to new posts
    
    };

   

    // Function to attach event listeners to "Follow" buttons
    const attachFollowListeners = () => {
        const followButtons = document.querySelectorAll('.follow-btn-2');
        
        followButtons.forEach(followBtn => {
            followBtn.onclick = async () => {
                console.log("Follow button clicked");

                // Retrieve the lawyerId from the input field within the same parent
                const lawyerIdInput = followBtn.closest('.follow-container').querySelector('input[name="postLawyerId"]');
                if (!lawyerIdInput) {
                    console.error("Lawyer ID not found");
                    return;
                }
                 
                const lawyerId = lawyerIdInput.value;

                // const postIdInput = followBtn.closest('.follow-container').querySelector('.follow-btn-2');
                // if (!postId) {
                //     console.error("Lawyer ID not found");
                //     return;
                // }
                // const postId = postIdInput.getAttribute("data-post-id");
                // console.log(postId)

                try {
                    const response = await fetch("/community/follow", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ lawyerId }),
                    });

                    const result = await response.json();

                    if (result.success) {
                        // Update the button text based on the follow status
                        if (result.follow) {
                            followBtn.innerText = "Following";
                        } else {
                            followBtn.innerText = "Follow";
                        }
                    } else {
                        console.error("Error:", result.message);
                    }
                } catch (error) {
                    console.error("Error:", error);
                }
            };
        });
    };

    // Handle the scroll event to trigger fetching posts when scrolled to the bottom
    const handleScroll = () => {
        if (window.innerHeight + window.scrollY >= document.documentElement.scrollHeight - 100) {
            if (isScrollingFinished) {
                fetchPosts();
                isScrollingFinished = false; // Prevent fetching again until posts are loaded
            }
        }
    };

    // Attach the scroll event listener
    window.addEventListener('scroll', handleScroll);

    // Initial call to fetch posts
    fetchPosts();
});

const form = document.getElementById('communityForm');
  const submitButton = document.getElementById('submitButton');

  form.addEventListener('submit', function(event) {
    submitButton.disabled = true; // Disable the button to prevent multiple clicks
  });





document.addEventListener('DOMContentLoaded', () => {
    const postContainer = document.getElementById("posts-container");
    if (postContainer) {
        postContainer.addEventListener('click', async(event) => {
            console.log('yes');
            if (event.target.classList.contains('.like-btn')) {
                console.log('Excluded element clicked. Ignoring.');
                return; 
            }
            let userPost = event.target.closest('.post-para');
            if (userPost) {
                const postId = userPost.getAttribute('data-post-id');
                console.log(postId);
                window.location.href = `/community/post/${postId}`;
            }
            // let commentArea = event.target.closest('.post-stat');
            // if (commentArea) {
            //     const postId = commentArea.getAttribute('data-post-id');
            //     console.log(postId);
            //     window.location.href = `/community/post/${postId}`;
            // }
            let commentArea = event.target.closest('.comment');
            if (commentArea) {
                const postId = commentArea.getAttribute('data-post-id');
                console.log(postId);
                window.location.href = `/community/post/${postId}`;
            }
            
        });
    } else {
        console.error('Error: posts-container element not found!');
    }
});




// document.addEventListener('DOMContentLoaded', () => {
//     const postContainer = document.getElementById("posts-container");
//     if (postContainer) {
//         postContainer.addEventListener('click', (event) => {
//             console.log('Clicked element:', event.target);

//             // Check if the clicked element or its closest parent is the like button
//             const likeButton = event.target.closest('.like-button'); 
//             if (likeButton) {
//                 // Retrieve postId from the data attribute
//                 const postId = likeButton.getAttribute('data-post-id');
//                 if (postId) {
//                     console.log('Post ID:', postId);

//                     // Send the post impression using `navigator.sendBeacon`
//                     navigator.sendBeacon(
//                         '/community/post-impressions',
//                         JSON.stringify({ postId: postId })
//                     );
//                 } else {
//                     console.error('Error: Post ID not found on the clicked element.');
//                 }
//             }
//         });
//     } else {
//         console.error('Error: posts-container element not found!');
//     }
// });
document.addEventListener('DOMContentLoaded', () => {
const form1 = document.getElementById('communityForm');
    form1.addEventListener('submit',async(event)=>{
        event.preventDefault();
        const formData = new FormData(form1);
        const json = Object.fromEntries(formData.entries());
        console.log(json);
        try{
            const response = await fetch('/community',{
                method: 'POST',
                headers: {
                  'Content-Type':'application/json'
                },
                body: JSON.stringify(json)
            });

          if (response.status === 401){
          Toastify({
          text: 'Please sign in to add a review.',
          duration: 3000,
          close: true,
          gravity: "top",
          position: "center",
          backgroundColor: "#FF0000",
        }).showToast();
        return;
        }

        const data = await response.json();
        Toastify({
            text: data.message,
            duration: 3000,
            close: true,
            gravity: "top",
            position: "center",
            backgroundColor: data.success? "#4CAF50":"FF0000",
        }).showToast();

        // if(data.success){
        //     setTimeout(()=>{
        //         window.location.href=`/community/user-profile?id=${data.userId}`;
        //     },1000);
        // }
        } catch(error){
            console.error('Error:', error);
            Toastify({
            text: "An error occurred. Please try again.",
            duration: 3000, 
            close: true, 
            gravity: "top", 
            position: "center", 
            backgroundColor: "#FF0000", 
          }).showToast();
        }
    })
});










        </script>
</body>

</html>
